***EXAM MOLARD Arnaud***

*** Questions ***

1- Why did I choose to place the stack before the data ?

The stack is placed before the data because of how it grows in the data section. We can control it better, it may prevent from data overflow and corrupting data.

2- Explain commit 7dccc4f2 ?

The commit is talking about the fix of a bug related to long-running tasks. When the code is making a KO we do add and use a panic() function.

3- With reference to commit f45bf29b, draft jiffies_to_us() and us_to_jiffies ?

This commit is converting a jiffies value into a µs value and vice versa.

static inline unsigned long us_to_jiffies(int us)
{
       return (us * HZ / 10⁶) ?: us ? 1 : 0;
}

static inline int jiffies_to_us(unsigned long j)
{
       return (j * 10⁶ + HZ/2) / HZ;
}

4- What is the main electrical difference between SPI and I2C ?

The main electrical difference between SPI and I2C is that SPI is a 4-wire mode (MOSI : Master Out Slave In, MISO : Master In Slave Out , Clock, Ground) and I2C is 2-wire mode (TX : Transmission Data and RX : Reception Data ).

5- In the TDC board, explain why U7 is connected to GPIO 0-22 and what is the role of R23.

Accord to the datasheet, the output pin VoutB is an analog output voltage pins driven by its own output buffer. U7 component is DAC converter with EEPROM memory. And the 4K7Ohm R23 resistor is a load resistance that according to the datasheet must be around 5kOhm for voltage regulation.

6- In the TDC board, explain the role of R14.

In the TDC board, the role of R14 is too isolate the voltage regulator, if a problem occurs on the TDC board.
For debugging, it can be good, we call this thing a shunt resistor.

***Problems***

1- In the shell program, add a command that plays a tune with the buzzer

Look at shell_program_with_buzzer.c

2- Write an API to blink leds and a test program for the TDC board

#ifndef LEDBLINK_CONTROL_H
#define LEDBLINK_CONTROL_H

struct lednum{
	int gpio;
	int delay_ms;
};

#define LED_BLINK_ON 0x0001
#define LED_BLINK_OFF 0x0000
#define LED_BLINKING 

void LED_Init(void);
void LED_On(struct led_num*);
void LED_Off(struct led_num*);
void LED_Blink(struct led_num*);

#endif

7- Draft an application for a coffe emachine, assuing the local MCP9701
is the water thermometer, gpio 1-14 drives the heather, gpio 0-7 is
the water pump and user buttons are connected to the TDC inputs.

Look at the paper.
